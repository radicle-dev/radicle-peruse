{"version":1,"ops":[{"added":["discussion"],"author":{"id":"7904ef6aa79e97fb4f919ee454416247af63fdac"},"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDI4NTgxNjI5ODk="},"removed":null,"timestamp":1575558341,"type":5},{"author":{"id":"4013a126327f056df5c15399e4ac71dac6d6f7a5"},"files":null,"message":"What we are missing currently is the possibility of conflicts. Those cannot arise when looking at only two states of a `Directory`: inevitably, one of them needs to be interpreted as newer, so the diff is effectively a path describing how to get from A to B.\n\nIf we take history into account, we can run into conflicts. For example:\n\n```\nA---B---D\n \\\n  C---E\n```\n\nSay `B` deleted a file, but `C` modified it. If we want to take a diff between `E` and `D`, there is no obvious way to tell which has precedence -- but this is only because we can interpret them as concurrent edits after a common ancestor `A`. I don't really understand yet how this works in pijul.\n\nThe question is, when would we need this? I'm not sure GH (f.ex.) shows you the conflicts with the merge target of a PR, it only tells you that there _are_ conflicts afaik. Could be a very nice feature, though.","metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU2MjUzMTk2MA=="},"timestamp":1575630520,"type":3},{"author":{"id":"7904ef6aa79e97fb4f919ee454416247af63fdac"},"files":null,"message":"So my thoughts on this that it might be derived by combining the `Browser` semantics alongside the `diff`. So something like the following:\n\n```rust\nbrowser.history(\"branch-d\");\nlet d_directory = browser.get_directory();\n\nbrowser.history(\"branch-e\");\nlet e_directory = browser.get_directory();\n\nlet diff = diff(d_directory, e_directory);\n```\n\nBUT writing out that example now makes me understand what you mean. Because if we say `E` is target then the file looks like it was added and not modified. If we say `D` is the source of truth then the file just looks like it's deleted and we don't have the modification diff.\n\nThanks for that example!","metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU2MjUzODA2NA=="},"timestamp":1575631823,"type":3},{"author":{"id":"7904ef6aa79e97fb4f919ee454416247af63fdac"},"files":null,"message":"I suppose in this particular case we can try search the `History` to find a common ancestor `A`. We can then proceed to `D1 = diff(A, D)` and `D2 = diff(A, E)`, followed by comparing the two `diff`s. For every file path that is unique in  `D1` and `D2` they are \"clean\" merges. For every file path that has an intersection in `D1` and `D2`, this is a conflict if we have two differing actions that oppose each other, in this case `delete` and `modify`.","metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU2MjU0NjYwNA=="},"timestamp":1575633857,"type":3},{"author":{"id":"4013a126327f056df5c15399e4ac71dac6d6f7a5"},"files":null,"message":"It’s probably worth noting that the types of the arguments are different:\n\n```haskell \ndiff :: Directory -\u003e Directory -\u003e Diff\n```\n\nis what we have now (cannot produce conflicts).\n\nHowever, there’s also:\n\n```haskell\nmerge :: History a -\u003e History a -\u003e Either Conflicts Patch\n```\n\nwhere a `Patch` looks exactly like `Diff`, except we can apply it to the `Directory` obtained from the first argument, and get back a new `Directory`. So, if you wish, it’s a `diff` where we don’t know the second argument yet.","metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU2Mjc3NTM0MQ==","github-url":"https://github.com/radicle-dev/radicle-surf/issues/27#issuecomment-562775341"},"timestamp":1575673796,"type":3},{"author":{"id":"4013a126327f056df5c15399e4ac71dac6d6f7a5"},"files":null,"message":"It’s probably worth noting that the types of the arguments are different:\n\n```haskell \ndiff :: Directory -\u003e Directory -\u003e Diff\n```\n\nis what we have now (cannot produce conflicts).\n\nHowever, there’s also:\n\n```haskell\nmerge :: History a -\u003e History a -\u003e Either Conflicts Patch\n```\n\nwhere a `Patch` looks exactly like `Diff`, except we can apply it to the `Directory` obtained from the first argument, and get back a new `Directory`. So, if you wish, it’s a `diff` where we don’t know the second argument yet.","metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMyMTA3NTMzOA=="},"target":"78424b02ba862de488bb63723ffbfa024b8180a5ea604cc0225cf346170fa695","timestamp":1575673834,"type":6},{"author":{"id":"4013a126327f056df5c15399e4ac71dac6d6f7a5"},"files":null,"message":"It’s probably worth noting that the types of the arguments are different:\n\n```haskell \ndiff :: Directory -\u003e Directory -\u003e Diff\n```\n\nis what we have now (cannot produce conflicts).\n\nHowever, there’s also:\n\n```haskell\nmerge :: History a -\u003e History a -\u003e Either Conflicts Patch\n```\n\nwhere a `Patch` looks exactly like a `Diff`, except we can apply it to the `Directory` obtained from the first argument, and get back a new `Directory`. So, if you wish, it’s a `diff` where we don’t know the second argument yet.","metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMyMTA3NTMzOQ=="},"target":"78424b02ba862de488bb63723ffbfa024b8180a5ea604cc0225cf346170fa695","timestamp":1575673834,"type":6},{"author":{"id":"7904ef6aa79e97fb4f919ee454416247af63fdac"},"files":null,"message":"Mmm that's a good point. Something that's interesting though is that in our model you can only get a `Directory` from a `History a` anyway :thinking:","metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU2NDAxMjQ0Nw=="},"timestamp":1575981209,"type":3},{"author":{"id":"7904ef6aa79e97fb4f919ee454416247af63fdac"},"files":null,"message":"Leaving this here as a reminder: https://docs.rs/git2/0.10.1/git2/struct.Repository.html#method.diff_tree_to_tree","metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU2NTQ5OTAzMQ=="},"timestamp":1576253158,"type":3},{"added":["β1"],"author":{"id":"7904ef6aa79e97fb4f919ee454416247af63fdac"},"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDMwMDEzODkwNTg="},"removed":null,"timestamp":1580721931,"type":5}]}